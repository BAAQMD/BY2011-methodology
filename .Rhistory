caption = "Composite emission factors (lb/acre).")
BY2011_annual_area_source_emission_factor_data %>%
filter_categories(
THESE_CATEGORIES) %>%
kable_BY2011_emission_factors(
pollutants = union(
BY2011_POLLUTANTS,
c("CO2_bio", "CH4", "N2O")),
caption = "Composite emission factors (lb/fire).")
BY2011_annual_area_source_emission_factor_data %>%
filter_categories(
THESE_CATEGORIES) %>%
kable_BY2011_emission_factors(
pollutants = union(
BY2011_POLLUTANTS,
c("CO2", "CH4", "N2O")),
caption = "Emission factors (lb/MMcf).")
BY2011_annual_emission_data %>% filter_categories(2223) %>% filter_pollutants("TSP", "PM10", "PM2.5") %>% tabulate_emissions_by(cat_id, pol_abbr, year)
BY(2011) %>% DB_raw_growth_profiles(nested = FALSE) %>% filter(gpf_id == 898)
BY2011_annual_emission_data %>% filter_categories(1748) %>% filter_pollutants("TSP", "PM10", "PM2.5") %>% tabulate_emissions_by(cat_id, pol_abbr, year)
BY2011_annual_emission_data %>% filter_categories(42) %>% filter_pollutants("PM10")
BY2011_annual_emission_data %>% filter_categories(42) %>% filter_pollutants("PM10") %>% filter_years(CY(2011))
BY2011_annual_emission_data %>% filter_categories(42) %>% filter_pollutants("PM10") %>% filter_years(CY(2011)) %>% pull_total(ems_qty)
BY2011_annual_emission_data %>% filter_categories(42) %>% filter_pollutants("PM10") %>% filter_years(CY(2011)) %>% convert_emission_units(to = "ton/day") %>% pull_total(ems_qty)
BY2011_annual_emission_data %>% filter_categories(42) %>% filter_pollutants("TSP") %>% filter_years(CY(2011)) %>% convert_emission_units(to = "ton/day") %>% pull_total(ems_qty)
FROG11_data <- read_csv(
"~/Dropbox/BY2015/Work/Speciation/TOG/FROG11BY11.csv")
FROG15_data <- read_csv(
"~/Dropbox/BY2015/Work/Speciation/TOG/FROG15BY15.csv")
diff_and_render(
FROG11_data,
FROG15_data)
FROG15_data
FROG15_data %>% distinct(ROG)
FROG15_data %>% count(ROG)
FROG15_data %>% count(ROG, sort = TRUE)
FROG15_data %>% filter(cat_id %in% BY2011_sets$`Area sources`) %>% count(ROG, sort = TRUE)
webfraction_data <- read_xlsx(
"~/Dropbox/BY2015/Work/Speciation/References/ARB_Speciation/webfraction21nov19.xlsx",
sheet = "fraction_112119")
format_SIC("86090111004045")
strtools::format_SIC("86090111004045")
library(inventory)
strtools::format_EIC("86090111004045")
SIP2016::SIP2016_EIC_hierarchy %>% filter(EIC_id == strtools::format_EIC("86090111004045"))
t0324
t0325 %>% filter(p == 39)
t0325 %>% filter(p == 39) %>% glimpse()
?t0325
?t1325
t1325 %>% filter(p == 39) %>% glimpse()
THESE_CATEGORIES <- c(
"#1647 Lawn & Garden, Gasoline (4 stroke)" = 1647,
"#1647 Lawn & Garden, Gasoline (2 stroke)" = 1648,
"#1647 Lawn & Garden, Evaporative (4 stroke)" = 1649,
"#1647 Lawn & Garden, Evaporative (4 stroke)" = 1650,
"#1647 Lawn & Garden, Diesel" = 1651)
BY2011_county_fraction_data %>%
filter_categories(
THESE_CATEGORIES) %>%
kable_BY2011_county_fractions()
source("chapter-setup.R")
##------ [welcome] Today is Wed Mar 11 12:11:42 2020 ------##
##------ [welcome] This is Ingres v2019.6.25 (2019-10-18 13:16:10) ------##
##------ [welcome] This is DataBank v2020.3.4 (2020-03-04 22:46:49) ------##
##------ [welcome] This is inventory v2020.2.6 (2020-02-06 22:28:25) ------##
THESE_CATEGORIES <- c(
"#1647 Lawn & Garden, Gasoline (4 stroke)" = 1647,
"#1647 Lawn & Garden, Gasoline (2 stroke)" = 1648,
"#1647 Lawn & Garden, Evaporative (4 stroke)" = 1649,
"#1647 Lawn & Garden, Evaporative (4 stroke)" = 1650,
"#1647 Lawn & Garden, Diesel" = 1651)
BY2011_county_fraction_data %>%
filter_categories(
THESE_CATEGORIES) %>%
kable_BY2011_county_fractions()
BY2011_county_fraction_data %>%
filter_categories(
THESE_CATEGORIES)
BY2011_county_fraction_data %>%
filter_categories(
THESE_CATEGORIES) %>% View()
BY2011_county_fraction_data %>%
filter_categories(
THESE_CATEGORIES)
BY2011_county_fraction_data %>%
filter_categories(
THESE_CATEGORIES) %>%
select(
category,
cnty_abbr,
cnty_frac) %>%
spread(
cnty_abbr,
cnty_frac) %>%
tidyr::chop(
category)
BY2011_county_fraction_data %>%
filter_categories(
THESE_CATEGORIES) %>%
select(
category,
cnty_abbr,
cnty_frac) %>%
spread(
cnty_abbr,
cnty_frac)
BY2011_county_fraction_data %>%
filter_categories(
THESE_CATEGORIES) %>%
select(
category,
cnty_abbr,
cnty_frac)
#
# Later, a table will be rendered, with row headings for:
#
# - Solvent Base
# - Water Base
# - Other
#
# The ordering of the rows here (in `THESE_CATEGORIES`)
# determines the order of rows in that table.
#
THESE_CATEGORIES <- c(
"#1010 Solvent Base, Flats" = 1010L,
"#1011 Solvent Base, Non-Flats, High Gloss" = 1011L,
"#1012 Solvent Base, Non-Flats, Low & Medium Gloss" = 1012L,
"#1014 Solvent Base, Non-Flats, Quick Dry Enamels" = 1014L,
"#1015 Solvent Base, Clear Wood Finishes, Varnish, Clear & Semi-Transparent" = 1015L,
"#1016 Solvent Base, Clear Wood Finishes, Lacquers" = 1016L,
"#1019 Solvent Base, Stains, Clear & Semi-Transparent" = 1019L,
"#1020 Solvent Base, Stains, Opaque" = 1020L,
"#1021 Solvent Base, Wood Preservatives" = 1021L,
"#1022 Solvent Base, Primers, Sealers, & Undercoats" = 1022L,
"#1023 Solvent Base, Quick Dry Primers, Sealers, & Undercoats" = 1023L,
"#1026 Solvent Base, Industrial Maintenance Coatings" = 1026L,
"#1027 Solvent Base, Traffic Marking" = 1027L,
"#1028 Solvent Base, Waterproofing Sealers" = 1028L,
"#1030 Solvent Base, Concrete Curing Compounds" = 1030L,
"#1031 Solvent Base, Roof Coatings" = 1031L,
"#1032 Solvent Base, Dry Fog Coatings" = 1032L,
"#1035 Solvent Base, Metallic Pigmented Coatings" = 1035L,
"#1039 Solvent Base, Form Release Compounds" = 1039L,
"#1275 Solvent Base, Bituminous Roof" = 1275L,
"#1277 Solvent Base, Floor" = 1277L,
"#1629 Solvent Base, Bituminous Roof Primer" = 1629L,
"#1630 Solvent Base, Faux Finishing" = 1630L,
"#1631 Solvent Base, Rust Preventative" = 1631L,
"#1632 Solvent Base, Specialty Primer, Sealer, & Undercoat" = 1632L,
"#1633 Solvent Base, Waterproofing Concrete/Masonry Sealers" = 1633L,
"#1042 Solvent Base, Other Coatings" = 1042L,
"#1043 Water Base, Flats" = 1043L,
"#1044 Water Base, Non-Flats, High Gloss" = 1044L,
"#1045 Water Base, Non-Flats, Low & Medium Gloss" = 1045L,
"#1048 Water Base, Clear Wood Finishes, Varnish, Clear & Semi-Transparent" = 1048L,
"#1049 Water Base, Clear Wood Finishes, Lacquers" = 1049L,
"#1052 Water Base, Stains, Clear & Semi-Transparent" = 1052L,
"#1053 Water Base, Stains, Opaque" = 1053L,
"#1054 Water Base, Wood Preservatives" = 1054L,
"#1055 Water Base, Primers, Sealers, & Undercoats" = 1055L,
"#1056 Water Base, Quick Dry Primers, Sealers, & Undercoats" = 1056L,
"#1059 Water Base, Industrial Maintenance Coatings" = 1059L,
"#1060 Water Base, Traffic Marking" = 1060L,
"#1061 Water Base, Waterproofing Sealers" = 1061L,
"#1063 Water Base, Concrete Curing Compounds" = 1063L,
"#1064 Water Base, Roof Coatings" = 1064L,
"#1065 Water Base, Dry Fog Coatings" = 1065L,
"#1068 Water Base, Metallic Pigmented Coatings" = 1068L,
"#1072 Water Base, Form Release Compounds" = 1072L,
"#1279 Water Base, Bituminous Roof" = 1279L,
"#1281 Water Base, Floor" = 1281L,
"#1635 Water Base, Bituminous Roof Primer" = 1635L,
"#1636 Water Base, Faux Finishing" = 1636L,
"#1637 Water Base, Rust Preventative" = 1637L,
"#1638 Water Base, Specialty Primer, Sealer, & Undercoat" = 1638L,
"#1639 Water Base, Waterproofing Concrete/Masonry Sealers" = 1639L,
"#1075 Water Base, Other Coatings" = 1075L,
"#1888 Other, Thinning (for Solvent Base Coatings)" = 1888L,
"#1889 Other, Additives (for Water Base Coatings)" = 1889L,
"#1890 Other, Cleanup Solvents (for Solvent & Water Base Coatings)" = 1890L)
BY2011_county_fraction_data %>%
filter_categories(
THESE_CATEGORIES) %>%
select(
category,
cnty_abbr,
cnty_frac) %>%
spread(
cnty_abbr,
cnty_frac) %>%
tidyr::chop(
category)
BY2011_county_fraction_data %>%
filter_categories(
THESE_CATEGORIES) %>%
select(
category,
cnty_abbr,
cnty_frac) %>%
spread(
cnty_abbr,
cnty_frac) %>%
tidyr::chop(
category) %>%
ensurer::ensure(
nrow(.) == 1) %>%
mutate(
category = "(all)") %>%
kable_BY2011_county_fractions()
BY2011_county_fraction_data %>%
filter_categories(
THESE_CATEGORIES) %>%
select(
category,
cnty_abbr,
cnty_frac) %>%
spread(
cnty_abbr,
cnty_frac) %>%
tidyr::chop(
category) %>%
ensurer::ensure(
nrow(.) == 1) %>%
mutate(
category = "(all)") %>%
gather(
cnty_abbr,
cnty_frac,
-category) %>%
kable_BY2011_county_fractions()
?kable
GHG2015_data <- read_csv("~/Dropbox/Projects/GHGs-2017-Q1/Patches/GHGs-patches-SAS-ODS_substitutes-v3.csv")
(BY2015_data <- read_excel("~/Dropbox/BY2015/Categories/BY2015_categories_assignment.xlsx", sheet = 2))
(BY2015_data <- read_excel("~/Dropbox/BY2015/Categories/BY2015_categories_assignment.xlsx", sheet = 3))
View (BY2015_data)
(BY2015_data <- read_excel("~/Dropbox/BY2015/Categories/BY2015_categories_assignment.xlsx", sheet = 3) %>% filter(cat_h2 %>% str_detect("OZONE DEPLETING")))
BY2015_data
(BY2015_data <- read_excel("~/Dropbox/BY2015/Categories/BY2015_categories_assignment.xlsx", sheet = 3) %>% filter(cat_h2 %>% str_detect("OZONE DEPLETING")) %>% select(cat_id, starts_with("cat_h")))
(GHG2015_data <- read_csv("~/Dropbox/Projects/GHGs-2017-Q1/Patches/GHGs-patches-SAS-ODS_substitutes-v3.csv"))
(GHG2015_data <- read_csv("~/Dropbox/Projects/GHGs-2017-Q1/Patches/GHGs-patches-SAS-ODS_substitutes-v3.csv") %>% distinct(cat_id, starts_with("cat_h")))
(GHG2015_data <- read_csv("~/Dropbox/Projects/GHGs-2017-Q1/Patches/GHGs-patches-SAS-ODS_substitutes-v3.csv") %>% select(cat_id, starts_with("cat_h")))
(GHG2015_data <- read_csv("~/Dropbox/Projects/GHGs-2017-Q1/Patches/GHGs-patches-SAS-ODS_substitutes-v3.csv") %>% select(cat_id, sector, activity, pol_abbr))
diff_and_render(BY2015_data, GHG2015_data)
View(GHG2015_data)
(GHG2015_data <- read_csv("~/Dropbox/Projects/GHGs-2017-Q1/Patches/GHGs-patches-SAS-ODS_substitutes-v3.csv") %>% select(cat_id, cat_h3 = sector, cat_h4 = activity, cat_h5 = pol_abbr))
1.01 ^ 20
THESE_CATEGORIES <- c(
"#108 Gravure" = 108,
"#109 Flexographic" = 109,
"#110 Letterpress" = 110,
"#112 Lithographic" = 112,
"#1898 Lithographic (Area)" = 1898,
"#115 Silkscreen" = 115,
"#1899 Silkscreen (Area)" = 1899,
"#116 Small Inhouse Print Services" = 116,
"#1900 Small Inhouse Print Services (Area)" = 1900)
#
# All of these categories are assigned the same growth profile, so let's just plot that.
#
growth_data <-
DB_raw_growth_profiles(
years = BY2011_YEARS,
nested = FALSE) %>%
filter(
gpf_id == 837)
source("chapter-setup.R")
##------ [welcome] Today is Thu Mar 12 12:39:14 2020 ------##
##------ [welcome] This is Ingres v2019.6.25 (2019-10-18 13:16:10) ------##
##------ [welcome] This is DataBank v2020.3.4 (2020-03-04 22:46:49) ------##
##------ [welcome] This is inventory v2020.2.6 (2020-02-06 22:28:25) ------##
#
# All of these categories are assigned the same growth profile, so let's just plot that.
#
growth_data <-
DB_raw_growth_profiles(
years = BY2011_YEARS,
nested = FALSE) %>%
filter(
gpf_id == 837)
growth_data %>%
chart_annual_growth_by(
color = cnty_abbr,
base_year = CY(2011),
year_limits = BY2011_YEAR_LIMITS,
year_expand = BY2011_YEAR_EXPAND,
title = "#837 Mdfd. Mfg-Prntg",
subtitle = "This profile is assigned to all BY2011 Printing categories.")
#
# All of these categories are assigned the same growth profile, so let's just plot that.
#
growth_data <-
DB_raw_growth_profiles(
years = BY2011_YEARS,
nested = FALSE) %>%
filter(
gpf_id == 262)
growth_data %>%
chart_BY2011_annual_growth_factors_by(
color = cnty_abbr,
title = "#262 Construction Growth",
subtitle = "This profile is assigned to all of BY2011 categories #1657 through #1675.")
#
# All of these categories are assigned the same growth profile, so let's just plot that.
#
growth_data <-
DB_raw_growth_profiles(
years = BY2011_YEARS,
nested = FALSE) %>%
filter(
gpf_id == 262)
growth_data %>%
chart_annual_growth_by(
color = cnty_abbr,
base_year = CY(2011),
flag_years = CY(2030),
year_limits = BY2011_YEAR_LIMITS,
year_expand = BY2011_YEAR_EXPAND,
title = "#262 Construction Growth",
subtitle = "This profile is assigned to all of BY2011 categories #1657 through #1675.")
#
# All of these categories are assigned the same growth profile, so let's just plot that.
#
growth_data <-
DB_raw_growth_profiles(
years = BY2011_YEARS,
nested = FALSE) %>%
filter(
gpf_id == 837)
growth_data %>%
chart_annual_growth_by(
color = cnty_abbr,
base_year = CY(2011),
year_limits = BY2011_YEAR_LIMITS,
year_expand = BY2011_YEAR_EXPAND,
flag_years = CY(2030),
title = "#837 Mdfd. Mfg-Prntg",
subtitle = "This profile is assigned to all BY2011 Printing categories.")
THESE_CATEGORIES <- c(
"#302 Gasoline" = 302,
"#303 Gas Fuel" = 303,
"#304 Liquid Fuel (Point)" = 304,
"#1578 Agricultural" = 1578)
BY2011_county_fraction_data %>%
filter_categories(
THESE_CATEGORIES) %>%
kable_BY2011_county_fractions()
BY2011_growth_profile_crosswalk %>%
filter_categories(
THESE_CATEGORIES) %>%
kable_BY2011_growth_crosswalk()
BY2011_annual_growth_factor_data %>%
filter_categories(
THESE_CATEGORIES) %>%
chart_BY2011_annual_growth_factors_by(
color = cnty_abbr)
BY2011_annual_emission_data %>%
filter_categories(
THESE_CATEGORIES) %>%
chart_BY2011_annual_emissions_by(
fill = category)
RY(2009:2011) %>% DB_point_source_PONSCO_emissions() %>% filter_categories(305) %>% filter_pollutants("TOG") %>% pivot_table(rows = "fac_id")
P(12626) %>% with_facility_name()
PY(2009:2011) %>% DB_point_source_PONSCO_emissions() %>% filter_categories(305) %>% filter_pollutants("TOG") %>% pivot_table(rows = "fac_id")
PY(2007:2011) %>% DB_point_source_PONSCO_emissions() %>% filter_categories(305) %>% filter_pollutants("TOG") %>% pivot_table(rows = "fac_id")
RY(2007:2011) %>% DB_point_source_PONSCO_emissions() %>% filter_categories(305) %>% filter_pollutants("TOG") %>% pivot_table(rows = "fac_id")
RY(2007:2011) %>% DB_point_source_PONSCO_emissions() %>% filter_categories(301) %>% filter_pollutants("PM10") %>% pivot_table(rows = "fac_id")
RY(2007:2011) %>% DB_point_source_PONSCO_emissions() %>% filter_categories(301) %>% filter_pollutants("PM") %>% pivot_table(rows = "fac_id")
RY(2001:2011) %>% DB_point_source_PONSCO_emissions() %>% filter_categories(299, 305) %>% filter_pollutants("SO2") %>% pivot_table(rows = "fac_id")
PY(2001:2011) %>% DB_point_source_PONSCO_emissions() %>% filter_categories(299, 305) %>% filter_pollutants("SO2") %>% pivot_table(rows = "fac_id")
PY(1997:2011) %>% DB_point_source_PONSCO_emissions() %>% filter_categories(299, 305) %>% filter_pollutants("SO2") %>% pivot_table(rows = "fac_id")
BY2011_annual_emission_data %>%
filter_categories(
THESE_CATEGORIES) %>%
filter_years(
CY(2008:2011)) %>%
filter_pollutants(
"TOG") %>%
convert_emission_units(
to = "ton/day") %>%
tabulate_emissions_by(
category,
pollutant,
year,
digits = 3) %>%
select(
Category = category,
starts_with("CY"),
Pollutant = pollutant,
Unit = ems_unit)
BY2011_annual_emission_data %>%
filter_categories(
THESE_CATEGORIES) %>%
filter_years(
CY(2008:2011)) %>%
filter_pollutants(
"TOG") %>%
convert_emission_units(
to = "ton/day") %>%
tabulate_emissions_by(
category,
pollutant,
year,
digits = 3) %>%
select(
Category = category,
starts_with("CY"),
Pollutant = pollutant,
Unit = ems_unit) %>%
kable_BY2011(
caption = "TOG emissions from inventoried pesticides (2011).")ss
BY2011_annual_emission_data %>%
filter_categories(
THESE_CATEGORIES) %>%
filter_years(
CY(2008:2011)) %>%
filter_pollutants(
"TOG") %>%
convert_emission_units(
to = "ton/day") %>%
tabulate_emissions_by(
category,
pollutant,
year,
digits = 3) %>%
select(
Category = category,
starts_with("CY"),
Pollutant = pollutant,
Unit = ems_unit) %>%
kable_BY2011(
caption = "TOG emissions from inventoried pesticides (2011).")
THESE_CATEGORIES <- c(
"#1190 Agricultural, Methyl Bromide" = 1190,
"#1191 Agricultural, Other" = 1191,
"#1192 Non-Ag/Consumer, Methyl Bromide" = 1192,
"#1193 Non-Ag/Consumer, Other" = 1193)
BY2011_annual_emission_data %>%
filter_categories(
THESE_CATEGORIES) %>%
filter_years(
CY(2011)) %>%
filter_pollutants(
"TOG") %>%
convert_emission_units(
to = "ton/day") %>%
tabulate_emissions_by(
category,
pollutant,
year,
digits = 3) %>%
select(
Category = category,
starts_with("CY"),
Pollutant = pollutant,
Unit = ems_unit) %>%
kable_BY2011(
totals = "row",
caption = "TOG emissions from inventoried pesticides (2011).")
BY2011_annual_emission_data %>%
filter_categories(
THESE_CATEGORIES) %>%
filter_years(
CY(2011)) %>%
filter_pollutants(
"TOG") %>%
convert_emission_units(
to = "ton/day") %>%
tabulate_emissions_by(
category,
pollutant,
year,
digits = 3) %>%
select(
category,
starts_with("CY"),
pollutant = pollutant,
unit = ems_unit) %>%
kable_BY2011(
totals = "row",
caption = "TOG emissions from inventoried pesticides (2011).")
BY2011_annual_emission_data %>% with_hierarchy(BY2011_category_hierarchy) %>% pivot_table(rows = "cat_id", inclusions = list(pol_abbr = list("NOx")))
BY2011_annual_emission_data %>% with_hierarchy(BY2011_category_hierarchy) %>% filter_pollutants("NOx") %>% pivot_table(rows = "cat_id")
BY2011_category_hierarchy %>% filter_categories(2190) %>% glimpse()
BY2011_annual_emission_data %>% with_hierarchy(BY2011_category_hierarchy) %>% filter_at(vars(starts_with("cat_h"), any_vars(str_detect(., "Container")))
)
BY2011_annual_emission_data %>% with_hierarchy(BY2011_category_hierarchy) %>% filter_at(vars(starts_with("cat_h")), any_vars(~ str_detect(., "Container")))
BY2011_annual_emission_data %>% with_hierarchy(BY2011_category_hierarchy) %>% filter_at(vars(starts_with("cat_h")), any_vars(str_detect(., "Container")))
BY2011_annual_emission_data %>% with_hierarchy(BY2011_category_hierarchy) %>% filter_at(vars(starts_with("cat_h")), any_vars(str_detect(., "Container"))) %>% pivot_table(rows = c("cat_id", "pol_abbr"))
BY2011_annual_emission_data %>% with_hierarchy(read_excel("~/Dropbox/BY2015/Hierarchies/BY2015_default_category_hierarchy.csv")) %>% filter_at(vars(starts_with("cat_h")), any_vars(str_detect(., "Container"))) %>% pivot_table(rows = c("cat_h3", "cat_h4", "cat_h5", "cat_h6", "cat_id, "pol_abbr"))
BY2011_annual_emission_data %>% with_hierarchy(read_excel("~/Dropbox/BY2015/Hierarchies/BY2015_default_category_hierarchy.csv")) %>% filter_at(vars(starts_with("cat_h")), any_vars(str_detect(., "Container")))
BY2011_annual_emission_data %>% with_hierarchy(read_csv("~/Dropbox/BY2015/Hierarchies/BY2015_default_category_hierarchy.csv")) %>% filter_at(vars(starts_with("cat_h")), any_vars(str_detect(., "Container")))
BY2011_annual_emission_data %>% with_hierarchy(read_csv("~/Dropbox/BY2015/Hierarchies/BY2015_default_category_hierarchy.csv")) %>% filter_at(vars(starts_with("cat_h")), any_vars(str_detect(., "Container"))) %>% pivot_table(rows = c("cat_h3", "cat_h4", "cat_h5", "cat_h6", "cat_id, "pol_abbr"))
BY2011_annual_emission_data %>% with_hierarchy(read_csv("~/Dropbox/BY2015/Hierarchies/BY2015_default_category_hierarchy.csv")) %>% filter_at(vars(starts_with("cat_h")), any_vars(str_detect(., "Container")))
BY2011_annual_emission_data %>% with_hierarchy(read_csv("~/Dropbox/BY2015/Hierarchies/BY2015_default_category_hierarchy.csv")) %>% filter_at(vars(starts_with("cat_h")), any_vars(str_detect(., "Container"))) %>% pivot_table(rows = c("cat_h3", "cat_h4", "cat_h5", "cat_h6", "cat_id, "pol_abbr"))
BY2011_annual_emission_data %>% with_hierarchy(read_csv("~/Dropbox/BY2015/Hierarchies/BY2015_default_category_hierarchy.csv")) %>% filter_at(vars(starts_with("cat_h")), any_vars(str_detect(., "Container"))) %>% pivot_table(rows = c("cat_h3", "cat_h4", "cat_h5", "cat_h6", "cat_id", "pol_abbr"))
BY2015_default_category_hierarchy <- read_excel("~/Dropbox/BY2015/Categories/BY2015_categories_assignment.xlsx", sheet = 3) %>% select(cat_id, starts_with("cat_h")); BY2011_annual_emission_data %>% with_hierarchy(BY2015_default_category_hierarchy) %>% filter_at(vars(starts_with("cat_h")), any_vars(str_detect(., "Container"))) %>% pivot_table(rows = c("cat_h3", "cat_h4", "cat_h5", "cat_h6", "cat_id", "pol_abbr"))
BY2015_default_category_hierarchy <- read_excel("~/Dropbox/BY2015/Categories/BY2015_categories_assignment.xlsx", sheet = 3) %>% select(cat_id, num_range("cat_h", 1:6)); BY2011_annual_emission_data %>% with_hierarchy(BY2015_default_category_hierarchy) %>% filter_at(vars(starts_with("cat_h")), any_vars(str_detect(., "Container"))) %>% pivot_table(rows = c("cat_h3", "cat_h4", "cat_h5", "cat_h6", "cat_id", "pol_abbr"))
BY2015_default_category_hierarchy <- read_excel("~/Dropbox/BY2015/Categories/BY2015_categories_assignment.xlsx", sheet = 3) %>% select(cat_id, num_range("cat_h", 1:6))
BY2015_default_category_hierarchy %>% filter_categories(2173, 2207)
BY2015_default_category_hierarchy %>% filter_categories(2173, 2207) %>% drop_vars(category)
BY2015_default_category_hierarchy %>% filter_categories(2173, 2207) %>% drop_vars(category) %>% copydat::Copy()
BY2015_default_category_hierarchy %>% filter_categories(2174, 2208) %>% drop_vars(category) %>% copydat::Copy()
RY(2007:2011) %>% DB_point_source_PONSCO_emissions() %>% filter_categories(301) %>% filter_pollutants("SO2") %>% pivot_table(rows = "fac_id")
RY(2007:2011) %>% DB_point_source_PONSCO_emissions() %>% filter_categories(299) %>% filter_pollutants("TOG") %>% pivot_table(rows = "fac_id")
tibble(src_code = "C1130235") %>% unpack_src_codes()
tibble(src_code = "C1130235") %>% unpack_src_codes() %>% glimpse()
DB_point_source_emission_factors() %>% filter(str_detect(src_code, "C1130235))
DB_point_source_emission_factors() %>% filter(str_detect(src_code, "C1130235"))
DB_point_source_emission_factors() %>% filter(str_detect(src_code, "C1130235"), pol_id == 990)
tibble(fac_id = 11, src_id = 1507, src_code = "C1130235") %>% unpack_src_codes() %>% inventory:::with_point_source_emission_factors()
tibble(fac_id = 11, src_id = 1507, src_code = "C1130235", pol_id = 990) %>% unpack_src_codes() %>% inventory:::with_point_source_emission_factors()
